Generics in java type-safe object creation

Advantages of Generics in java:
1. Type-safety: We can hold only a single type of objects in generics. It doesn’t allow to store other objects.

List list = new ArrayList();
list.add(10);
list.add(“Ravi”); // No error

List <Integer> list=new ArrayList<Integer>();
list.add(10);
list.add(“Ravi”); // compile time error

2. Type casting is not required: There is no need to typecast the object.

List list = new ArrayList();
list.add(“Ravi”);
String name = (String) list.get(0); // typecast to String using (String)

List <String> list=new ArrayList<String>();
list.add(“Ravi”);
String name=list.get(0); // No need to typecast

3. Compile-Time Checking: It is checked at compile time so problem will not occur at runtime.

List list = new ArrayList();
list.add(10);
list.add(“Ravi”); // No error

List <Integer> list=new ArrayList<Integer>();
list.add(10);
list.add(“Ravi”); // compile time error
