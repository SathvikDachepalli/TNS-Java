Encapsulation in java:
definition:
Encapsulation is a process of wrapping code and data together into a single unit.

Encapsulation is the mechanism that binds together code and the data it manipulates, and keeps both safe from outside interference and misuse.
In short, encapsulation is the process of hiding the implementation details from the user.

Why encapsulation is used in java:
1)To hide the data
2)To hide the data we use private access modifier
3)To access the private data we use public getter and setter methods

Advantages of encapsulation:
1)Data hiding
2)Reusability
3)Testability

example:
class Student{
private int rollno;
private String name;
private int age;
public void setRollno(int rollno){
this.rollno=rollno;
}
public int getRollno(){
return rollno;
}
public void setName(String name){
this.name=name;
}
public String getName(){
return name;
}
public void setAge(int age){
this.age=age;
}
public int getAge(){
return age;
}
}
class Test{
public static void main(String[] args){
Student s=new Student();
s.setRollno(101);
s.setName("ratan");
s.setAge(20);
System.out.println(s.getRollno());
System.out.println(s.getName());
System.out.println(s.getAge());
}
}

output:
101
ratan
20

In the above example we are hiding the data by using private access modifier and accessing the data by using public getter and setter methods.
What kind of functions are used in encapsulation
1)getter methods
2)setter methods


