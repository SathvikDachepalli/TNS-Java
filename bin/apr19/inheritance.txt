Existing class                    ->                      Child class
methods, variables, constructors  ->  Shared methods, variables, constructors, {new methods, new variables, new constructors} of child. 



class A{        // Existing class, parent class, super class, base class
    int a;
    void methodA(){
        //code
    }
}

class B extends A{       // Child class, derived class, sub class, extended class
    int b;
    void methodB(){
        //code
    }
}

class C extends B{       // Child class, derived class, sub class, extended class
    int c;
    void methodC(){
        //code
    }
}

class main{
    public static void main(String[] args){
        C c = new C();
        c.methodA();    // Super class of C is B, super class of B is A
        c.methodB();    // Super class B
        c.methodC();    // Child class
    }
}



Method Overriding is possible through inheritance.
Private methods cannot be overridden.
Static methods cannot be overridden.
Final methods cannot be overridden.
Constructors cannot be overridden.

Protected methods can be overridden to the immediate child class only.
Private methods cannot be overridden.
Public methods can be overridden to any class.

Private methods are not inherited.
Protected methods are inherited to the immediate child class only.
Public methods are inherited to any class.

Three types of inheritance in Java:

Single Inheritance: A single class is inherited by another class.
Multilevel Inheritance: A class is inherited by another class, and that class is inherited by another class.
Hierarchical Inheritance: Multiple classes are inherited by a single class.

Single Inheritance:         Multilevel Inheritance:               Hierarchical Inheritance:

        Super                       Super                               Super                                       
          |                           |                                 / | \  
          v                          Sub 1                             /  |  \
        child                         |                             sub1 sub2 sub3
                                      v                               
                                     Sub 2                            
                                                                    

Syntax:

class A {                       class A {                        class A {
    int a;                          int a;                          int a;
    void methodA(){                 void methodA(){                 void methodA(){
        //code                           //code                               //code
    }                                }                                }
}                                }                                }

class B extends A{               class B extends A{                 class B extends A{
    int b;                          int b;                            int b;
    void methodB(){                 void methodB(){                   void methodB(){
        //code                         //code                             //code
    }                              }                                }
}                                }                                }

                                class C extends B{                 class C extends A{
                                   int c;                            int c;
                                   void methodC(){                   void methodC(){
                                      //code                             //code
                                  }                                }
                                }                                }

